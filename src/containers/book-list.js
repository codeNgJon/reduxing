import React, { Component } from 'react';
import { connect } from 'react-redux';
import { selectBook } from '../actions/index';
import { bindActionCreators } from 'redux';
// ^^^^makes sure the function generated by action creator
// actually goes through all our reducers

class BookList extends Component {
  renderList() {
    return this.props.books.map((book) => {
      return (
        <li
          key={book.title}
          onClick={() => this.props.selectBook(book)}
          className='list-group-item'>
          {book.title}
        </li>
      );
    });
  }

  render() {
    return (
      <ul className="list-group col-sm-4">
        {this.renderList()}
      </ul>
    )
  }
}

// Anything returned from this function will end up
// as props on the BookList container (this.props.selectBook)
function mapDispatchToProps(dispatch) {
  // whenever selectBook is called, the result should be passed
  // to all of our reducers (that's what bindActionCreators does with dispatch)

  //dispatch is a function that makes sure it passes all the changes to the reducers
  return bindActionCreators({ selectBook: selectBook }, dispatch);
}

function mapStateToProps(state) {
  //Whatever is return will show up
  // as props inside of BookList
  return {
    books: state.books
  };
}


// promote BookList from a component to a container - it needs
// to know about this new dispatch method, selectBook. Make it available
// as a prop.
export default connect(mapStateToProps, mapDispatchToProps)(BookList);
